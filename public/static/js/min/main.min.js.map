{"version":3,"sources":["main.js"],"names":["tradeLogic","data","count","tickers","showTrades","setInterval","length","netTotal","i","ticker","toLowerCase","Number","$","text","clearInterval","item","currentTradePrice","price","shares","symbol","action","indexOf","populateCard","push","console","log","calcShares","tradeValue","calculateSellTradeValue","setTradeColors","netValue","calculateSellNetValue","setNetColors","calculateBuyTradeValue","calculateBuyNetValue","removeClass","addClass","Math","sign","problemTwoCode","formattedString","append","handleResponse","whichPageRunCode","window","location","pathname","JSON","stringify","fetchData","handleData","ajax","url","dataType","success"],"mappings":"aAAA,IAAIA,WAAa,SAASC,GACtB,IAAIC,EAAQ,EACRC,EAAU,GACVC,EAAaC,YAAY,WAEzB,GAAIH,GAASD,EAAKK,OAAQ,CAGtB,IADA,IAAIC,EAAW,EACPC,EAAI,EAAGA,EAAIL,EAAQG,OAAQE,IAAI,CACnC,IAAIC,EAASN,EAAQK,GAAGE,cACxBH,GAAsBI,OAAOC,EAAE,IAAIH,EAAO,QAAQI,QAItD,OAFAD,EAAE,cAAcC,KAAKN,QACrBO,cAAcV,GAKlB,IAAIW,EAAOd,EAAKC,GAEZc,GADAP,EAAS,GACWM,EAAKE,MAAQF,EAAKG,QAS1C,GANAT,EAASM,EAAKI,OAAOT,cAGrBE,EAAE,IAAIH,EAAO,WAAWI,KAAKE,EAAKK,QAClCR,EAAE,IAAIH,EAAO,UAAUI,KAAK,IAAIE,EAAKE,QAEA,IAAlCd,EAAQkB,QAAQN,EAAKI,QAOpB,OALAG,aAAab,EAAQM,EAAMC,GAE3Bb,EAAQoB,KAAKR,EAAKI,aAElBjB,IAUJ,GALmB,SAAhBa,EAAKK,QAAuD,GAAlCR,EAAE,IAAIH,EAAO,WAAWI,QACjDW,QAAQC,IAAI,4BAII,SAAhBV,EAAKK,QAAuD,GAAlCR,EAAE,IAAIH,EAAO,WAAWI,OAAa,CAC/D,IAAIa,EAAaf,OAAOC,EAAE,IAAIH,EAAO,WAAWI,QAAUE,EAAKG,OAC/DN,EAAE,IAAIH,EAAO,WAAWI,KAAKa,GAG7B,IAAIC,EAAaC,wBAAwBZ,EAAmBP,GAC5DG,EAAE,IAAIH,EAAO,UAAUI,KAAKc,GAC5BE,eAAeF,EAAYlB,GAG3B,IAAIqB,EAAWC,sBAAsBtB,EAAQO,GAC7CJ,EAAE,IAAIH,EAAO,QAAQI,KAAKiB,GAC1BE,aAAaF,EAAUrB,GAK3B,GAAmB,QAAhBM,EAAKK,OAAiB,CACjBM,EAAaf,OAAOC,EAAE,IAAIH,EAAO,WAAWI,QAAUE,EAAKG,OAC/DN,EAAE,IAAIH,EAAO,WAAWI,KAAKa,GAI7BG,eADIF,EAAaM,uBAAuBjB,EAAmBP,GAChCA,GAC3BG,EAAE,IAAIH,EAAO,UAAUI,KAAKc,GAGxBG,EAAWI,qBAAqBzB,EAAQO,GAC5CJ,EAAE,IAAIH,EAAO,QAAQI,KAAKiB,GAG9B5B,KACD,MAGP,SAASoB,aAAab,EAAQM,EAAMC,GAChCJ,EAAE,IAAIH,EAAO,SAAS0B,YAAY,QAClCvB,EAAE,IAAIH,EAAO,SAAS2B,SAAS,mBAC/BxB,EAAE,IAAIH,EAAO,WAAWI,KAAKE,EAAKG,QAClCN,EAAE,IAAIH,EAAO,UAAUI,KAAKG,GAC5BJ,EAAE,IAAIH,EAAO,QAAQI,MAA0B,EAArBG,GAC1BgB,cAAkC,EAArBhB,EAAwBP,GAGzC,SAASwB,uBAAuBjB,EAAmBP,GAC/C,OAAOO,EAAoBL,OAAOC,EAAE,IAAIH,EAAO,UAAUI,QAG7D,SAASe,wBAAwBZ,EAAmBP,GAChD,OAAOO,EAAoBL,OAAOC,EAAE,IAAIH,EAAO,UAAUI,QAG7D,SAASgB,eAAeF,EAAYlB,GACH,IAA1B4B,KAAKC,KAAKX,KACTf,EAAE,IAAIH,EAAO,WAAW0B,YAAY,OACpCvB,EAAE,IAAIH,EAAO,SAAS0B,YAAY,cAClCvB,EAAE,IAAIH,EAAO,WAAW2B,SAAS,SACjCxB,EAAE,IAAIH,EAAO,SAAS2B,SAAS,kBAEL,IAA3BC,KAAKC,KAAKX,KACTf,EAAE,IAAIH,EAAO,WAAW0B,YAAY,SACpCvB,EAAE,IAAIH,EAAO,SAAS0B,YAAY,gBAClCvB,EAAE,IAAIH,EAAO,WAAW2B,SAAS,OACjCxB,EAAE,IAAIH,EAAO,SAAS2B,SAAS,eAEN,IAA1BC,KAAKC,KAAKX,IAETH,QAAQC,IAAI,cAIpB,SAASM,sBAAsBtB,EAAQO,GACnC,OAAOL,OAAOC,EAAE,IAAIH,EAAO,QAAQI,QAAUG,EAGjD,SAASkB,qBAAqBzB,EAAQO,GAClC,OAAOL,OAAOC,EAAE,IAAIH,EAAO,QAAQI,QAAUG,EAGjD,SAASgB,aAAaF,EAAUrB,GACD,IAAxB4B,KAAKC,KAAKR,KACTlB,EAAE,IAAIH,EAAO,cAAc0B,YAAY,OACvCvB,EAAE,IAAIH,EAAO,cAAc2B,SAAS,WAEZ,IAAzBC,KAAKC,KAAKR,KACTlB,EAAE,IAAIH,EAAO,cAAc0B,YAAY,SACvCvB,EAAE,IAAIH,EAAO,cAAc2B,SAAS,QAEb,IAAxBC,KAAKC,KAAKR,IAETN,QAAQC,IAAI,cAKpB,IAAIc,eAAiB,SAAStC,GAC1B,IAAI,IAAIO,EAAI,EAAGA,EAAIP,EAAKK,OAAQE,IAAK,CACjC,IAAIgC,EAAkB,WAAWvC,EAAKO,GAAGW,OACrC,YAAYlB,EAAKO,GAAGS,MAAM,YAAYhB,EAAKO,GAAGU,OAC9C,YAAYjB,EAAKO,GAAGY,OAAO,aAE/BR,EAAE,uBAAuB6B,OAAOD,KAIxC,SAASE,eAAezC,GACpB0C,iBAAiB1C,GAIrB,SAAS0C,iBAAiB1C,GACtB,OAAO2C,OAAOC,SAASC,UACnB,IAAK,eACDlC,EAAE,eAAeC,KAAKkC,KAAKC,UAAU/C,IACrC,MACJ,IAAK,eACDsC,eAAetC,GACf,MACJ,IAAK,iBACDD,WAAWC,IAKvB,IAAIgD,UAAY,SAASC,GACrB,OAAOtC,EAAEuC,KAAK,CACVC,IAAK,aACLC,SAAU,OACVC,QAASZ,kBAIjBO","file":"main.min.js","sourcesContent":["var tradeLogic = function(data) {\n    var count = 0;\n    var tickers = []\n    var showTrades = setInterval(function() {\n        // time to stop and clearInterval\n        if (count == data.length) {\n            // could change this after every trade, but one check will do\n            var netTotal = 0;\n            for(var i = 0; i < tickers.length; i++){\n                var ticker = tickers[i].toLowerCase();\n                netTotal = netTotal + Number($('#'+ticker+'-net').text())\n            }\n            $('#net-total').text(netTotal)\n            clearInterval(showTrades);\n            return;\n        }\n\n        // make shorthand\n        var item = data[count];\n        var ticker = \"\";\n        var currentTradePrice = item.price * item.shares;\n        \n        // so we can use the symbol to match with the html\n        ticker = item.symbol.toLowerCase();\n        \n        // set action and price\n        $('#'+ticker+'-action').text(item.action);\n        $('#'+ticker+'-price').text('$'+item.price);\n        \n        if(tickers.indexOf(item.symbol) === -1){\n            // populate the first of its kind card\n            populateCard(ticker, item, currentTradePrice)\n            // put them into an array for verifying new card\n            tickers.push(item.symbol)\n            // up the count since we will return\n            count++;\n            return;\n        }\n\n        // checking for trade shroted\n        if(item.action === 'SELL' && $('#'+ticker+'-shares').text() == 0) {\n            console.log('Trades cannot be shorted')\n        }\n\n        // run sell logic\n        if (item.action === 'SELL' && $('#'+ticker+'-shares').text() != 0) {\n            var calcShares = Number($('#'+ticker+'-shares').text()) - item.shares;\n            $('#'+ticker+'-shares').text(calcShares);\n            \n            // trade calculation\n            var tradeValue = calculateSellTradeValue(currentTradePrice, ticker);\n            $('#'+ticker+'-trade').text(tradeValue);\n            setTradeColors(tradeValue, ticker);\n            \n            // net calculation\n            var netValue = calculateSellNetValue(ticker, currentTradePrice)\n            $('#'+ticker+'-net').text(netValue)\n            setNetColors(netValue, ticker)\n            \n        }\n\n        // run buy logic\n        if(item.action === 'BUY'){\n            var calcShares = Number($('#'+ticker+'-shares').text()) + item.shares;\n            $('#'+ticker+'-shares').text(calcShares);\n            \n            // trade calculation\n            var tradeValue = calculateBuyTradeValue(currentTradePrice, ticker)\n            setTradeColors(tradeValue, ticker);\n            $('#'+ticker+'-trade').text(tradeValue);\n            \n            // net calculation\n            var netValue = calculateBuyNetValue(ticker, currentTradePrice);\n            $('#'+ticker+'-net').text(netValue);\n        }\n\n        count++;\n    }, 2000)\n}\n\nfunction populateCard(ticker, item, currentTradePrice) {\n    $('#'+ticker+'-card').removeClass('hide');\n    $('#'+ticker+'-card').addClass('scale-up-center');\n    $('#'+ticker+'-shares').text(item.shares);\n    $('#'+ticker+'-trade').text(currentTradePrice);\n    $('#'+ticker+'-net').text(currentTradePrice * -1);\n    setNetColors(currentTradePrice * -1, ticker);\n}\n\nfunction calculateBuyTradeValue(currentTradePrice, ticker) {\n    return currentTradePrice + Number($('#'+ticker+'-trade').text()) \n}\n\nfunction calculateSellTradeValue(currentTradePrice, ticker) {\n    return currentTradePrice - Number($('#'+ticker+'-trade').text()) \n}\n\nfunction setTradeColors(tradeValue, ticker) {\n    if(Math.sign(tradeValue) === 1) {\n        $('.'+ticker+'Dollars').removeClass('red');\n        $('#'+ticker+'-card').removeClass('red-border');\n        $('.'+ticker+'Dollars').addClass('green');\n        $('#'+ticker+'-card').addClass('green-border');\n    }\n    if(Math.sign(tradeValue) === -1) {\n        $('.'+ticker+'Dollars').removeClass('green');\n        $('#'+ticker+'-card').removeClass('green-border');\n        $('.'+ticker+'Dollars').addClass('red');\n        $('#'+ticker+'-card').addClass('red-border');\n    }\n    if(Math.sign(tradeValue) === 0) {\n        // no neutrals were found, otherwise would have made code here\n        console.log('Neutral...');\n    }\n}\n\nfunction calculateSellNetValue(ticker, currentTradePrice) {\n    return Number($('#'+ticker+'-net').text()) + currentTradePrice;\n}\n\nfunction calculateBuyNetValue(ticker, currentTradePrice) {\n    return Number($('#'+ticker+'-net').text()) - currentTradePrice;\n}\n\nfunction setNetColors(netValue, ticker) {\n    if(Math.sign(netValue) === 1) {\n        $('.'+ticker+'NetDollars').removeClass('red');\n        $('.'+ticker+'NetDollars').addClass('green');\n    }\n    if(Math.sign(netValue) === -1) {\n        $('.'+ticker+'NetDollars').removeClass('green');\n        $('.'+ticker+'NetDollars').addClass('red');\n    }\n    if(Math.sign(netValue) === 0) {\n        // no neutrals were found, otherwise would have made code here\n        console.log('Neutral...');\n    }\n}\n\n\nvar problemTwoCode = function(data) {\n    for(var i = 0; i < data.length; i++) {\n        var formattedString = '<tr><td>'+data[i].symbol+\n            '</td><td>'+data[i].price+'</td><td>'+data[i].shares+\n            '</td><td>'+data[i].action+'</td></tr>';\n\n        $('#output-two > tbody').append(formattedString)\n    }\n}\n\nfunction handleResponse(data) {\n    whichPageRunCode(data);\n}\n\n\nfunction whichPageRunCode(data) {\n    switch(window.location.pathname){\n        case '/problem-one':\n            $('#output-one').text(JSON.stringify(data))\n            break;\n        case '/problem-two':\n            problemTwoCode(data)\n            break;\n        case '/problem-three':\n            tradeLogic(data)\n            break;\n    }\n}\n\nvar fetchData = function(handleData) {\n    return $.ajax({\n        url: \"/test-data\",\n        dataType: \"json\",\n        success: handleResponse\n    })\n}\n\nfetchData()"]}